// <auto-generated />
using System;
using Day1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day1.Migrations
{
    [DbContext(typeof(CompanyDBContext))]
    [Migration("20240514034406_AddSeedingData")]
    partial class AddSeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day1.Model.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = 4,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("Day1.Model.ProjectEmployee", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            EmployeeId = 1,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 4,
                            EmployeeId = 2,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 2,
                            EmployeeId = 3,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 1,
                            EmployeeId = 4,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 3,
                            EmployeeId = 5,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 3,
                            EmployeeId = 6,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 4,
                            EmployeeId = 7,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 1,
                            EmployeeId = 8,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 2,
                            EmployeeId = 9,
                            Enable = true
                        },
                        new
                        {
                            ProjectId = 4,
                            EmployeeId = 10,
                            Enable = true
                        });
                });

            modelBuilder.Entity("Day1.Model.Salaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            Salary = 50
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            Salary = 160
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            Salary = 70
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 4,
                            Salary = 80
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 5,
                            Salary = 140
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 6,
                            Salary = 100
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 7,
                            Salary = 110
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 8,
                            Salary = 120
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 9,
                            Salary = 130
                        },
                        new
                        {
                            Id = 10,
                            EmployeeId = 10,
                            Salary = 140
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2158),
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2169),
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2170),
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2171),
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2172),
                            Name = "Charlie"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2173),
                            Name = "David"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 4,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2174),
                            Name = "Eve"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2175),
                            Name = "Frank"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 2,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2176),
                            Name = "Grace"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 4,
                            JoinedDate = new DateTime(2024, 5, 14, 10, 44, 5, 477, DateTimeKind.Local).AddTicks(2177),
                            Name = "Helen"
                        });
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Project 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Project 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Project 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Project 4"
                        });
                });

            modelBuilder.Entity("Day1.Model.ProjectEmployee", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Day1.Model.Salaries", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("Day1.Model.Salaries", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Day1.Model.Departments", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day1.Model.Departments", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary")
                        .IsRequired();
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
